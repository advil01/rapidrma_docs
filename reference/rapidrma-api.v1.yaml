openapi: 3.0.0
info:
  title: RapidRMA API
  version: '1.0'
  description: API for the RapidRMA System
  contact: {}
servers:
  - url: 'http://dev.api.rapidrma.com'
    description: Dev
  - url: 'https://api.rapidrma.com'
    description: Production
paths:
  /company/register:
    post:
      summary: Register Company
      operationId: post-company-register
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  companyID:
                    type: string
                  userID:
                    type: string
                  verificationCode:
                    type: string
              examples:
                Successful:
                  value:
                    status: success
                    companyID: e64f4d2a-11a2-11ea-a5ae-060095d9a561
                    userID: e66163ef-11a2-11ea-a5ae-060095d9a561
                    verificationCode: e66163ef-11a2-11ea-a5ae-060095d9a561
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: Register a new company.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                company:
                  type: object
                  required:
                    - companyName
                  properties:
                    companyName:
                      type: string
                user:
                  type: object
                  required:
                    - email
                    - password
                    - firstName
                    - lastName
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                    firstName:
                      type: string
                    lastName:
                      type: string
              required:
                - company
                - user
            examples:
              Successful:
                value:
                  company:
                    companyName: testco
                  user:
                    password: 'allenford123!'
                    email: me@advil0.com23
                    firstName: Tyler
                    lastName: Neal
  '/company/{companyID}/verify':
    parameters:
      - type: string
        name: companyID
        in: path
        required: true
        schema:
          type: string
        description: Company UUID
    post:
      summary: Verify Company
      operationId: 'post-company-{companyID}-verify'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
              examples:
                Success:
                  value:
                    status: success
        '401':
          description: Bad Verification Code
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
              examples:
                Example:
                  value:
                    status: bad_verification_code
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                verificationCode:
                  type: string
              required:
                - verificationCode
            examples:
              Example:
                value:
                  verificationCode: 5d374ec7-1511-4bdf-9e39-c77863b789db
        description: Pass the verification code through the body
      description: 'Done when user clicks verification email, this verifies that their email is valid and we are enabling their account.'
  /company/login:
    post:
      summary: Login
      operationId: post-company-login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  companyID:
                    type: string
                  auth-key:
                    type: string
              examples:
                Example:
                  value:
                    status: success
                    companyID: e64f4d2a-11a2-11ea-a5ae-060095d9a561
                    auth-key: 4974f175-1dff-48f2-85db-fe2e4e50f2f4
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
              examples:
                Bad Inputs:
                  value:
                    status: bad_inputs
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
              examples:
                Bad Login:
                  value:
                    status: bad_login
                Company Not Verified:
                  value:
                    status: not_active
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
            examples:
              Example:
                value:
                  email: me@advil0.com23
                  password: 'allenford123!'
      description: 'User login, requires email + password.'
  '/company/{companyID}':
    parameters:
      - type: string
        name: companyID
        in: path
        required: true
        schema:
          type: string
        description: Company UUID
    get:
      summary: Get Company Info
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
              examples:
                Example:
                  value:
                    name: testco
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
              examples:
                Incorrect Company ID (getting info from diff company):
                  value:
                    status: not_allowed_company_id
                Invalid Session:
                  value:
                    status: invalid_session
                Missing Auth Key:
                  value:
                    status: no_auth_key
      operationId: 'get-company-{companyID}'
      security:
        - auth-key: []
      description: 'Gets the company name, will be expanded later.'
  '/company/{companyID}/role':
    parameters:
      - type: string
        name: companyID
        in: path
        required: true
    get:
      summary: Get Available Roles
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    id:
                      type: string
              examples:
                Success:
                  value:
                    - id: 2608b438-157d-11ea-a5ae-060095d9a561
                      name: Administrator
                    - id: 260f539f-157d-11ea-a5ae-060095d9a561
                      name: User
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
              examples:
                Missing Auth Key:
                  value:
                    status: no_auth_key
                Invalid Session:
                  value:
                    status: invalid_session
      operationId: 'get-company-{companyID}-role'
      description: Provides a list of all available roles a user can be associated to.  No auth current but will require auth key.
      security:
        - auth-key: []
  /user:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                Bad Inputs:
                  value:
                    status: bad_inputs
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                Invalid Auth Key:
                  value:
                    status: invalid_auth_key
                Missing Auth Key:
                  value:
                    status: missing_auth_key
      description: Inviting a new user
      security:
        - auth-key: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Email address
                role:
                  type: string
                  description: UUID of role
            examples:
              Example:
                value:
                  email: me@advil0.com
                  role: 2608b438-157d-11ea-a5ae-060095d9a561
        description: ''
  '/user/{userID}/verify':
    parameters:
      - type: string
        name: userID
        in: path
        required: true
    post:
      summary: Verify User
      operationId: 'post-user-{userID}-verify'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
              examples:
                Example:
                  value:
                    status: success
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
              examples:
                Bad Verification Code:
                  value:
                    status: bad_verification_code
      description: Validates user account using provided verification code
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                verificationCode:
                  type: string
            examples:
              Example:
                value:
                  verificationCode: 5d374ec7-1511-4bdf-9e39-c77863b789db
  /product:
    get:
      summary: Retrieve All Products
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    weight:
                      type: number
                    description:
                      type: string
                    active:
                      type: integer
                    price:
                      type: number
              examples:
                Example:
                  value:
                    - id: 55a4c6f1-b42b-4cf2-a0ab-fafc31ea899f
                      name: example
                      weight: 29.3
                      description: this is a description
                      active: 1
                      price: 29.99
                    - id: 760137f6-6431-4a42-a143-cbbf99ae8420
                      name: example
                      weight: 29.3
                      description: this is a description
                      active: 1
                      price: 29.99
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                Invalid Auth Key:
                  value:
                    status: invalid_auth_key
                Missing Auth Key:
                  value:
                    status: missing_auth_key
      operationId: get-product
      description: Retrieves all products related to the logged in company
      security:
        - auth-key: []
    post:
      summary: Create New Product
      operationId: post-product
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  productID:
                    type: string
              examples:
                Example:
                  value:
                    status: success
                    productID: ada03a48-b923-427f-b78e-74a04027110f
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                Bad Inputs:
                  value:
                    status: bad_inputs
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                Invalid Auth Key:
                  value:
                    status: invalid_auth_key
                Missing Auth Key:
                  value:
                    status: missing_auth_key
      description: Creates a new product under the logged in company.
      security:
        - auth-key: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                weight:
                  type: number
                description:
                  type: string
                price:
                  type: number
            examples:
              Example:
                value:
                  name: test product
                  weight: 25.7
                  description: this is a description
                  price: 29.99
components:
  schemas: {}
  securitySchemes:
    auth-key:
      name: auth-key
      type: apiKey
      in: header
